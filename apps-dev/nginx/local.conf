
tcp_nodelay        on;

# origins
upstream api-upstream {
    server host.docker.internal:5734 max_fails=3 fail_timeout=10s;
}
upstream web-upstream {
    server host.docker.internal:5735 max_fails=3 fail_timeout=10s;
}

# HTTP redir
server {
    listen 8080 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

# HTTPS @ 4433
server {
    listen              *:4433 ssl;
    server_name         *.4ks.io;

    # ssl
    ssl_certificate     /etc/nginx/conf.d/local.4ks.io.pem;
    ssl_certificate_key /etc/nginx/conf.d/local.4ks.io.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # disable caching
    expires -1;

    error_page 502 /502.html;
    location = /502.html {
        root /usr/share/nginx/html;
        internal;
    }

    # info
    location /info {
        default_type "text/html";
        root /usr/share/nginx/html;
        try_files /info.html =404;
    }

    # https://github.com/vitejs/vite/discussions/6473
    # https://github.com/vitejs/vite/discussions/4795
    location /hmr {
        proxy_pass http://web-upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # api
    location ~ ^/api(/?)(.*) {
        proxy_pass                   http://api-upstream$1$2$is_args$args;
        proxy_redirect               off;
        proxy_set_header             Host              $host;
        proxy_set_header             X-Real-IP         $remote_addr;
        proxy_set_header             X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header             X-Forwarded-Host  $server_name;
        proxy_set_header             X-Forwarded-Proto $scheme;
        proxy_pass_request_headers   on;
        proxy_buffer_size            128k;
        proxy_buffers                4 256k;
        proxy_busy_buffers_size      256k;
    }

    # # swagger
    # location ~ ^/docs(/?)(.*) {
    #     proxy_pass                   http://api-upstream/docs$1$2;
    #     proxy_redirect               off;
    #     proxy_set_header             Host              $host;
    #     proxy_set_header             X-Real-IP         $remote_addr;
    #     proxy_set_header             X-Forwarded-For   $proxy_add_x_forwarded_for;
    #     proxy_set_header             X-Forwarded-Host  $server_name;
    #     proxy_set_header             X-Forwarded-Proto $scheme;
    #     proxy_pass_request_headers   on;
    #     proxy_buffer_size            128k;
    #     proxy_buffers                4 256k;
    #     proxy_busy_buffers_size      256k;
    # }

    # location ~ ^/api {
    #     proxy_pass                  http://api-upstream;
    #     proxy_redirect              off;
    #     proxy_set_header            Host              $host;
    #     proxy_set_header            X-Real-IP         $remote_addr;
    #     proxy_set_header            X-Forwarded-For   $proxy_add_x_forwarded_for;
    #     proxy_set_header            X-Forwarded-Host  $server_name;
    #     proxy_set_header            X-Forwarded-Proto $scheme;
    #     proxy_pass_request_headers  on;
    #     proxy_buffer_size           128k;
    #     proxy_buffers               4 256k;
    #     proxy_busy_buffers_size     256k;
    # }

    location / {
        proxy_pass                  http://web-upstream;
        proxy_redirect              off;
        proxy_set_header            Host              $host;
        proxy_set_header            X-Real-IP         $remote_addr;
        proxy_set_header            X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header            X-Forwarded-Host  $server_name;
        proxy_set_header            X-Forwarded-Proto $scheme;
        proxy_pass_request_headers  on;
        proxy_buffer_size           128k;
        proxy_buffers               4 256k;
        proxy_busy_buffers_size     256k;
    }

    sub_filter_once off;
    sub_filter 'server_hostname' '$hostname';
    sub_filter 'server_address'  '$server_addr:$server_port';
    sub_filter 'server_url'      '$request_uri';
    sub_filter 'server_date'     '$time_local';
    sub_filter 'request_id'      '$request_id';
}
