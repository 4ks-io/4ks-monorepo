name: Run Terraform

on:
  workflow_call:
    inputs:
      environment:
        description: 'dev | tst | prd'
        required: true
        type: string
      build_number:
        description: 'build number'
        required: true
        type: string
    secrets:
      gcp_api_token:
        required: true
      tf_api_token:
        required: true

jobs:
  build:
    name: Setup Terraform
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      # checkout
      - uses: actions/checkout@v3
      - name: select workspace
        run: |
          echo "TF_WORKSPACE=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "TF_api_build_number=${{ inputs.build_number }}"
          echo "TF_web_build_number=${{ inputs.build_number }}"
          echo "TF_stage=${{ inputs.environment }}"
      - name: verbose
        run: |
          env
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      # - name: Terraform Format
      #   id: fmt
      #   run: terraform fmt -check
      - name: Terraform Init
        working-directory: ./publish
        id: init
        run: terraform init
      - name: Terraform Plan
        working-directory: ./publish
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            cd ./publish/
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Apply
        working-directory: ./publish
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
