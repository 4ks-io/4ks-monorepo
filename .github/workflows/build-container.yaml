name: Build and Publish Container

on:
  workflow_call:
    inputs:
      app_name:
        description: "api | web"
        required: true
        type: string
      environment:
        description: "dev | tst | prd"
        required: true
        type: string
      gcp_project_name:
        description: "dev-4ks | tst-4ks | prd-4ks"
        required: true
        type: string
      gcp_registry:
        description: "container registry url"
        required: true
        type: string
      # build_number:
      #   description: 'build number'
      #   required: true
      #   type: string
    secrets:
      cgp_creds:
        required: true

jobs:
  build:
    name: build container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Env Vars
        run: |
          TAGS="${{ inputs.gcp_registry }}/${{ inputs.gcp_project_name }}/${{ inputs.app_name }}/app:${{ env.BUILD_NUMBER }}, ${{ inputs.gcp_registry }}/${{ inputs.gcp_project_name }}/${{ inputs.app_name }}/app:latest"
          echo "TAGS=$TAGS" >> $GITHUB_ENV
      - name: Env Vars
        run: |
          echo $GITHUB_ENV
      # - name: Pull Latest Alpine Go
      #   run: docker pull golang:1.18-alpine
      # - name: GCP Auth
      #   uses: google-github-actions/auth@v0
      #   with:
      #     project_id: ${{ inputs.gcp_project_name }}
      #     credentials_json: ${{ secrets.cgp_creds }}
      #     export_default_credentials: true
      # - name: GCP Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v0
      # - name: GCP Config
      #   run: |
      #     # gcloud auth configure-docker -q
      #     gcloud auth configure-docker ${{ inputs.gcp_registry }} --quiet
      # - name: Build
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: ./apps/${{ inputs.app_name }}/Dockerfile
      #     push: true
      #     tags: ${{ env.TAGS }}
      #     # cache-from: type=registry,ref=4ks/${{APP}}-ci:buildcache
      #     # cache-to: type=registry,ref=4ks/${{APP}}-ci:buildcache,mode=max
