name: Build and Publish Container

on:
  workflow_call:
    inputs:
      app_name:
        description: 'api | web | fetcher'
        required: true
        type: string
      # environment:
      #   description: 'dev | tst | prd'
      #   required: true
      #   type: string
      gcp_project_name:
        description: 'dev-4ks | tst-4ks | prd-4ks | eng-4ks'
        required: true
        type: string
      gcp_registry:
        description: 'container registry url'
        required: true
        type: string
      build_number:
        description: 'build number'
        required: true
        type: string
    secrets:
      gcp_api_token:
        required: true

jobs:
  build:
    name: container
    runs-on: ubuntu-latest
    # environment: ${{ inputs.environment }}
    steps:
      # checkout
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      # cloud auth
      - name: GCP Auth
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ inputs.gcp_project_name }}
          credentials_json: ${{ secrets.gcp_api_token }}
      # cloud sdk
      - name: GCP Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      # cloud config
      - name: GCP Config
        run: |
          # gcloud auth configure-docker -q
          gcloud auth configure-docker ${{ inputs.gcp_registry }} --quiet
      # package.json hack
      - name: PACKAGE_JSON hack
        run: |
          ./apps/web/package_json.sh
      # build
      - uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ inputs.build_number }}
          file: ./apps/${{ inputs.app_name }}/Dockerfile
          push: true
          tags: |
            ${{ inputs.gcp_registry }}/${{ inputs.gcp_project_name }}/${{ inputs.app_name }}/app:${{ inputs.build_number }}
            ${{ inputs.gcp_registry }}/${{ inputs.gcp_project_name }}/${{ inputs.app_name }}/app:latest
          # cache-from: type=registry,ref=4ks/${{APP}}-ci:buildcache
          # cache-to: type=registry,ref=4ks/${{APP}}-ci:buildcache,mode=max
