name: Build and Publish API
description: Build and Publish API

inputs:
  app_name:
    description: 'API/WEB'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
    - name: Set Env Vars
      run: |
        TAGS="${{ env.REGISTRY }}/${{ env.PROJECT }}/${{ inputs.app_name }}/app:${{ env.BUILD_NUMBER }}, ${{ env.REGISTRY }}/${{ env.PROJECT }}/${{ inputs.app_name }}/app:latest"
        echo "TAGS=$TAGS" >> $GITHUB_ENV
    # - name: Pull Latest Alpine Go
    #   run: docker pull golang:1.18-alpine
    - name: GCP Auth
      uses: google-github-actions/auth@v0
      with:
        project_id: ${{ env.PROJECT }}
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
        export_default_credentials: true
    - name: GCP Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
    - name: GCP Config
      run: |
        # gcloud auth configure-docker -q
        gcloud auth configure-docker ${{ env.REGISTRY }} --quiet
    - name: Build
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./apps/${{ inputs.app_name }}/Dockerfile
        push: true
        tags: ${{ env.TAGS }}
        # cache-from: type=registry,ref=4ks/${{APP}}-ci:buildcache
        # cache-to: type=registry,ref=4ks/${{APP}}-ci:buildcache,mode=max
